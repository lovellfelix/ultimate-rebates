"use strict";var ApplicationConfiguration=function(){var applicationModuleName="mean",applicationModuleVendorDependencies=["ngResource","ngAnimate","ui.router","ui.bootstrap","ui.utils","angularFileUpload","ngMaterial"],registerModule=function(moduleName,dependencies){angular.module(moduleName,dependencies||[]),angular.module(applicationModuleName).requires.push(moduleName)};return{applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:applicationModuleVendorDependencies,registerModule:registerModule}}();angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module(ApplicationConfiguration.applicationModuleName).config(["$locationProvider",function($locationProvider){$locationProvider.html5Mode(!0).hashPrefix("!")}]),angular.element(document).ready(function(){"#_=_"===window.location.hash&&(window.location.hash="#!"),angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])}),ApplicationConfiguration.registerModule("affiliates"),ApplicationConfiguration.registerModule("categories"),ApplicationConfiguration.registerModule("core"),ApplicationConfiguration.registerModule("rebates"),ApplicationConfiguration.registerModule("settings"),ApplicationConfiguration.registerModule("users"),angular.module("affiliates").run(["Menus",function(Menus){Menus.addMenuItem("topbar",{title:"Affiliates",state:"affiliates",type:"dropdown"}),Menus.addSubMenuItem("topbar","affiliates",{title:"List Affiliates",state:"affiliates.list"}),Menus.addSubMenuItem("topbar","affiliates",{title:"Create Affiliate",state:"affiliates.create"})}]),angular.module("affiliates").config(["$stateProvider",function($stateProvider){$stateProvider.state("affiliates",{"abstract":!0,url:"/affiliates",template:"<ui-view/>"}).state("affiliates.list",{url:"",templateUrl:"modules/affiliates/views/list-affiliates.client.view.html"}).state("affiliates.create",{url:"/create",templateUrl:"modules/affiliates/views/create-affiliate.client.view.html"}).state("affiliates.view",{url:"/:affiliateId",templateUrl:"modules/affiliates/views/view-affiliate.client.view.html"}).state("affiliates.edit",{url:"/:affiliateId/edit",templateUrl:"modules/affiliates/views/edit-affiliate.client.view.html"})}]),angular.module("affiliates").controller("AffiliatesController",["$scope","$stateParams","$location","Authentication","Affiliates","Rebates",function($scope,$stateParams,$location,Authentication,Affiliates,Rebates){$scope.authentication=Authentication,$scope.create=function(){var affiliate=new Affiliates({name:this.name});affiliate.$save(function(response){$location.path("affiliates/"+response._id),$scope.name=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(affiliate){if(affiliate){affiliate.$remove();for(var i in $scope.affiliates)$scope.affiliates[i]===affiliate&&$scope.affiliates.splice(i,1)}else $scope.affiliate.$remove(function(){$location.path("affiliates")})},$scope.update=function(){var affiliate=$scope.affiliate;affiliate.$update(function(){$location.path("affiliates/"+affiliate._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.affiliates=Affiliates.query()},$scope.findOne=function(){$scope.affiliate=Affiliates.get({affiliateId:$stateParams.affiliateId})},$scope.affiliateSearch=function(affiliate){$location.path("affiliates/"+affiliate._id)}}]),angular.module("affiliates").factory("Affiliates",["$resource",function($resource){return $resource("api/affiliates/:affiliateId",{affiliateId:"@_id"},{update:{method:"PUT"}})}]),angular.module("categories").run(["Menus",function(Menus){Menus.addMenuItem("topbar",{title:"Categories",state:"categories",type:"dropdown"}),Menus.addSubMenuItem("topbar","categories",{title:"List Categories",state:"categories.list"}),Menus.addSubMenuItem("topbar","categories",{title:"Create Category",state:"categories.create"})}]),angular.module("categories").config(["$stateProvider",function($stateProvider){$stateProvider.state("categories",{"abstract":!0,url:"/categories",template:"<ui-view/>"}).state("categories.list",{url:"",templateUrl:"modules/categories/views/list-categories.client.view.html"}).state("categories.create",{url:"/create",templateUrl:"modules/categories/views/create-category.client.view.html"}).state("categories.view",{url:"/:categoryId",templateUrl:"modules/categories/views/view-category.client.view.html"}).state("categories.edit",{url:"/:categoryId/edit",templateUrl:"modules/categories/views/edit-category.client.view.html"})}]),angular.module("categories").controller("CategoriesController",["$scope","$stateParams","$location","Authentication","Categories",function($scope,$stateParams,$location,Authentication,Categories){$scope.authentication=Authentication,$scope.create=function(){var category=new Categories({name:this.name});category.$save(function(response){$location.path("categories/"+response._id),$scope.name=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(category){if(category){category.$remove();for(var i in $scope.categories)$scope.categories[i]===category&&$scope.categories.splice(i,1)}else $scope.category.$remove(function(){$location.path("categories")})},$scope.update=function(){var category=$scope.category;category.$update(function(){$location.path("categories/"+category._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.categories=Categories.query()},$scope.findOne=function(){$scope.category=Categories.get({categoryId:$stateParams.categoryId})},$scope.categorySearch=function(category){$location.path("categories/"+category._id)}}]),angular.module("categories").factory("Categories",["$resource",function($resource){return $resource("api/categories/:categoryId",{categoryId:"@_id"},{update:{method:"PUT"}})}]),angular.module("core").config(["$stateProvider","$urlRouterProvider","$mdThemingProvider",function($stateProvider,$urlRouterProvider,$mdThemingProvider){$urlRouterProvider.otherwise("/"),$stateProvider.state("home",{url:"/",templateUrl:"modules/core/views/home.client.view.html"}),$mdThemingProvider.theme("default").primaryPalette("light-blue").accentPalette("orange")}]),angular.module("core").controller("HeaderController",["$scope","$state","Authentication","Menus",function($scope,$state,Authentication,Menus){$scope.$state=$state,$scope.authentication=Authentication,$scope.menu=Menus.getMenu("topbar"),$scope.isCollapsed=!1,$scope.toggleCollapsibleMenu=function(){$scope.isCollapsed=!$scope.isCollapsed},$scope.$on("$stateChangeSuccess",function(){$scope.isCollapsed=!1})}]),angular.module("core").controller("HomeController",["$scope","Authentication",function($scope,Authentication){$scope.authentication=Authentication}]),angular.module("core").service("Menus",[function(){this.defaultRoles=["*"],this.menus={};var shouldRender=function(user){if(!user)return this.isPublic;if(~this.roles.indexOf("*"))return!0;for(var userRoleIndex in user.roles)for(var roleIndex in this.roles)if(this.roles[roleIndex]===user.roles[userRoleIndex])return!0;return!1};this.validateMenuExistance=function(menuId){if(menuId&&menuId.length){if(this.menus[menuId])return!0;throw new Error("Menu does not exists")}throw new Error("MenuId was not provided")},this.getMenu=function(menuId){return this.validateMenuExistance(menuId),this.menus[menuId]},this.addMenu=function(menuId,options){return options=options||{},this.menus[menuId]={isPublic:null===options.isPublic||"undefined"==typeof options.isPublic?!0:options.isPublic,roles:options.roles||this.defaultRoles,items:options.items||[],shouldRender:shouldRender},this.menus[menuId]},this.removeMenu=function(menuId){this.validateMenuExistance(menuId),delete this.menus[menuId]},this.addMenuItem=function(menuId,options){if(options=options||{},this.validateMenuExistance(menuId),this.menus[menuId].items.push({title:options.title||"",state:options.state||"",type:options.type||"item","class":options["class"],isPublic:null===options.isPublic||"undefined"==typeof options.isPublic?this.menus[menuId].isPublic:options.isPublic,roles:null===options.roles||"undefined"==typeof options.roles?this.menus[menuId].roles:options.roles,position:options.position||0,items:[],shouldRender:shouldRender}),options.items)for(var i in options.items)this.addSubMenuItem(menuId,options.link,options.items[i]);return this.menus[menuId]},this.addSubMenuItem=function(menuId,parentItemState,options){options=options||{},this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].state===parentItemState&&this.menus[menuId].items[itemIndex].items.push({title:options.title||"",state:options.state||"",isPublic:null===options.isPublic||"undefined"==typeof options.isPublic?this.menus[menuId].items[itemIndex].isPublic:options.isPublic,roles:null===options.roles||"undefined"==typeof options.roles?this.menus[menuId].items[itemIndex].roles:options.roles,position:options.position||0,shouldRender:shouldRender});return this.menus[menuId]},this.removeMenuItem=function(menuId,menuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===menuItemURL&&this.menus[menuId].items.splice(itemIndex,1);return this.menus[menuId]},this.removeSubMenuItem=function(menuId,submenuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)for(var subitemIndex in this.menus[menuId].items[itemIndex].items)this.menus[menuId].items[itemIndex].items[subitemIndex].link===submenuItemURL&&this.menus[menuId].items[itemIndex].items.splice(subitemIndex,1);return this.menus[menuId]},this.addMenu("topbar",{isPublic:!1})}]),angular.module("core").service("Socket",["Authentication","$state","$timeout",function(Authentication,$state,$timeout){Authentication.user?this.socket=io():$state.go("home"),this.on=function(eventName,callback){this.socket&&this.socket.on(eventName,function(data){$timeout(function(){callback(data)})})},this.emit=function(eventName,data){this.socket&&this.socket.emit(eventName,data)},this.removeListener=function(eventName){this.socket&&this.socket.removeListener(eventName)}}]),angular.module("rebates").run(["Menus",function(Menus){Menus.addMenuItem("topbar",{title:"Rebates",state:"rebates",type:"dropdown"}),Menus.addSubMenuItem("topbar","rebates",{title:"List Rebates",state:"rebates.list"}),Menus.addSubMenuItem("topbar","rebates",{title:"Create Rebate",state:"rebates.create"})}]),angular.module("rebates").config(["$stateProvider",function($stateProvider){$stateProvider.state("rebates",{"abstract":!0,url:"/rebates",template:"<ui-view/>"}).state("rebates.list",{url:"",templateUrl:"modules/rebates/views/list-rebates.client.view.html"}).state("rebates.create",{url:"/create",templateUrl:"modules/rebates/views/create-rebate.client.view.html"}).state("rebates.view",{url:"/:rebateId",templateUrl:"modules/rebates/views/view-rebate.client.view.html"}).state("rebates.edit",{url:"/:rebateId/edit",templateUrl:"modules/rebates/views/edit-rebate.client.view.html"})}]),angular.module("rebates").controller("RebatesController",["$scope","$stateParams","$location","Authentication","Rebates","Affiliates","Categories",function($scope,$stateParams,$location,Authentication,Rebates,Affiliates,Categories){$scope.authentication=Authentication,$scope.affiliates=Affiliates.query(),$scope.categories=Categories.query(),$scope.create=function(){var rebate=new Rebates({title:this.title,affiliate:this.affiliate,category:this.category,link:this.link,discount:this.discount,caption:this.caption,status:this.status,expire:this.expire});rebate.$save(function(response){$location.path("rebates/"+response._id),$scope.title="",$scope.affiliate="",$scope.link=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(rebate){if(rebate){rebate.$remove();for(var i in $scope.rebates)$scope.rebates[i]===rebate&&$scope.rebates.splice(i,1)}else $scope.rebate.$remove(function(){$location.path("rebates")})},$scope.update=function(){var rebate=$scope.rebate;rebate.$update(function(){$location.path("rebates/"+rebate._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.rebates=Rebates.query()},$scope.findOne=function(){$scope.rebate=Rebates.get({rebateId:$stateParams.rebateId})},$scope.today=function(){$scope.dt=new Date},$scope.today(),$scope.clear=function(){$scope.dt=null},$scope.toggleMin=function(){$scope.minDate=$scope.minDate?null:new Date},$scope.toggleMin(),$scope.open=function($event){$event.preventDefault(),$event.stopPropagation(),$scope.opened=!0},$scope.dateOptions={formatYear:"yy",startingDay:1},$scope.formats=["dd-MMMM-yyyy","yyyy/MM/dd","dd.MM.yyyy","shortDate"],$scope.format=$scope.formats[1],$scope.selected=void 0}]),angular.module("rebates").factory("Rebates",["$resource",function($resource){return $resource("api/rebates/:rebateId",{rebateId:"@_id"},{update:{method:"PUT"}})}]),angular.module("settings").run(["Menus",function(Menus){Menus.addMenuItem("topbar",{title:"Settings",state:"settings",type:"dropdown"}),Menus.addSubMenuItem("topbar","settings",{title:"List Settings",state:"settings.list"}),Menus.addSubMenuItem("topbar","settings",{title:"Create Setting",state:"settings.create"})}]),angular.module("settings").config(["$stateProvider",function($stateProvider){$stateProvider.state("settings.list",{url:"",templateUrl:"modules/settings/views/list-settings.client.view.html"}).state("settings.create",{url:"/create",templateUrl:"modules/settings/views/create-setting.client.view.html"}).state("settings.view",{url:"/:settingId",templateUrl:"modules/settings/views/view-setting.client.view.html"}).state("settings.edit",{url:"/:settingId/edit",templateUrl:"modules/settings/views/edit-setting.client.view.html"})}]),angular.module("settings").controller("SettingsController",["$scope","$stateParams","$location","Authentication","Settings",function($scope,$stateParams,$location,Authentication,Settings){$scope.authentication=Authentication,$scope.create=function(){var setting=new Settings({name:this.name});setting.$save(function(response){$location.path("settings/"+response._id),$scope.name=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(setting){if(setting){setting.$remove();for(var i in $scope.settings)$scope.settings[i]===setting&&$scope.settings.splice(i,1)}else $scope.setting.$remove(function(){$location.path("settings")})},$scope.update=function(){var setting=$scope.setting;setting.$update(function(){$location.path("settings/"+setting._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.settings=Settings.query()},$scope.findOne=function(){$scope.setting=Settings.get({settingId:$stateParams.settingId})}}]),angular.module("settings").factory("Settings",["$resource",function($resource){return $resource("api/settings/:settingId",{settingId:"@_id"},{update:{method:"PUT"}})}]),angular.module("users").config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push(["$q","$location","Authentication",function($q,$location,Authentication){return{responseError:function(rejection){switch(rejection.status){case 401:Authentication.user=null,$location.path("signin");break;case 403:}return $q.reject(rejection)}}}])}]),angular.module("users").config(["$stateProvider",function($stateProvider){$stateProvider.state("settings",{"abstract":!0,url:"/settings",templateUrl:"modules/users/views/settings/settings.client.view.html"}).state("settings.profile",{url:"/profile",templateUrl:"modules/users/views/settings/edit-profile.client.view.html"}).state("settings.password",{url:"/password",templateUrl:"modules/users/views/settings/change-password.client.view.html"}).state("settings.accounts",{url:"/accounts",templateUrl:"modules/users/views/settings/manage-social-accounts.client.view.html"}).state("settings.picture",{url:"/picture",templateUrl:"modules/users/views/settings/change-profile-picture.client.view.html"}).state("authentication",{"abstract":!0,url:"/authentication",templateUrl:"modules/users/views/authentication/authentication.client.view.html"}).state("authentication.signup",{url:"/signup",templateUrl:"modules/users/views/authentication/signup.client.view.html"}).state("authentication.signin",{url:"/signin",templateUrl:"modules/users/views/authentication/signin.client.view.html"}).state("password",{"abstract":!0,url:"/password",template:"<ui-view/>"}).state("password.forgot",{url:"/forgot",templateUrl:"modules/users/views/password/forgot-password.client.view.html"}).state("password.reset",{"abstract":!0,url:"/reset",template:"<ui-view/>"}).state("password.reset.invalid",{url:"/invalid",templateUrl:"modules/users/views/password/reset-password-invalid.client.view.html"}).state("password.reset.success",{url:"/success",templateUrl:"modules/users/views/password/reset-password-success.client.view.html"}).state("password.reset.form",{url:"/:token",templateUrl:"modules/users/views/password/reset-password.client.view.html"})}]),angular.module("users").controller("AuthenticationController",["$scope","$http","$location","Authentication",function($scope,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/huts"),$scope.signup=function(){$http.post("/api/auth/signup",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/huts/create")}).error(function(response){$scope.error=response.message})},$scope.signin=function(){$http.post("/api/auth/signin",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/huts")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("PasswordController",["$scope","$stateParams","$http","$location","Authentication",function($scope,$stateParams,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.askForPasswordReset=function(){$scope.success=$scope.error=null,$http.post("/api/auth/forgot",$scope.credentials).success(function(response){$scope.credentials=null,$scope.success=response.message}).error(function(response){$scope.credentials=null,$scope.error=response.message})},$scope.resetUserPassword=function(){$scope.success=$scope.error=null,$http.post("/api/auth/reset/"+$stateParams.token,$scope.passwordDetails).success(function(response){$scope.passwordDetails=null,Authentication.user=response,$location.path("/password/reset/success")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("SettingsController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.user||$location.path("/"),$scope.hasConnectedAdditionalSocialAccounts=function(provider){for(var i in $scope.user.additionalProvidersData)return!0;return!1},$scope.isConnectedSocialAccount=function(provider){return $scope.user.provider===provider||$scope.user.additionalProvidersData&&$scope.user.additionalProvidersData[provider]},$scope.removeUserSocialAccount=function(provider){$scope.success=$scope.error=null,$http["delete"]("/api/users/accounts",{params:{provider:provider}}).success(function(response){$scope.success=!0,$scope.user=Authentication.user=response}).error(function(response){$scope.error=response.message})},$scope.updateUserProfile=function(isValid){if(isValid){$scope.success=$scope.error=null;var user=new Users($scope.user);user.$update(function(response){$scope.success=!0,Authentication.user=response},function(response){$scope.error=response.data.message})}else $scope.submitted=!0},$scope.changeUserPassword=function(){$scope.success=$scope.error=null,$http.post("/api/users/password",$scope.passwordDetails).success(function(response){$scope.success=!0,$scope.passwordDetails=null}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("ChangePasswordController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.changeUserPassword=function(){$scope.success=$scope.error=null,$http.post("/api/users/password",$scope.passwordDetails).success(function(response){$scope.success=!0,$scope.passwordDetails=null}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("ChangeProfilePictureController",["$scope","$timeout","$window","Authentication","FileUploader",function($scope,$timeout,$window,Authentication,FileUploader){$scope.user=Authentication.user,$scope.imageURL=$scope.user.profileImageURL,$scope.uploader=new FileUploader({url:"api/users/picture"}),$scope.uploader.filters.push({name:"imageFilter",fn:function(item,options){var type="|"+item.type.slice(item.type.lastIndexOf("/")+1)+"|";return-1!=="|jpg|png|jpeg|bmp|gif|".indexOf(type)}}),$scope.uploader.onAfterAddingFile=function(fileItem){if($window.FileReader){var fileReader=new FileReader;fileReader.readAsDataURL(fileItem._file),fileReader.onload=function(fileReaderEvent){$timeout(function(){$scope.imageURL=fileReaderEvent.target.result},0)}}},$scope.uploader.onSuccessItem=function(fileItem,response,status,headers){$scope.success=!0,$scope.user=Authentication.user=response,$scope.cancelUpload()},$scope.uploader.onErrorItem=function(fileItem,response,status,headers){$scope.cancelUpload(),$scope.error=response.message},$scope.uploadProfilePicture=function(){$scope.success=$scope.error=null,$scope.uploader.uploadAll()},$scope.cancelUpload=function(){$scope.uploader.clearQueue(),$scope.imageURL=$scope.user.profileImageURL}}]),angular.module("users").controller("EditProfileController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.updateUserProfile=function(isValid){if(isValid){$scope.success=$scope.error=null;var user=new Users($scope.user);user.$update(function(response){$scope.success=!0,Authentication.user=response},function(response){$scope.error=response.data.message})}else $scope.submitted=!0}}]),angular.module("users").controller("SocialAccountsController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.hasConnectedAdditionalSocialAccounts=function(provider){for(var i in $scope.user.additionalProvidersData)return!0;return!1},$scope.isConnectedSocialAccount=function(provider){return $scope.user.provider===provider||$scope.user.additionalProvidersData&&$scope.user.additionalProvidersData[provider]},$scope.removeUserSocialAccount=function(provider){$scope.success=$scope.error=null,$http["delete"]("/api/users/accounts",{params:{provider:provider}}).success(function(response){$scope.success=!0,$scope.user=Authentication.user=response}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("SettingsController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.user||$location.path("/")}]),angular.module("users").factory("Authentication",["$window",function($window){var auth={user:$window.user};return auth}]),angular.module("users").factory("Users",["$resource",function($resource){return $resource("api/users",{},{update:{method:"PUT"}})}]);